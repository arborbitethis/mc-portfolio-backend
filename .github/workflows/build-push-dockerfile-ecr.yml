name: Deploy to Amazon ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  API_ECR_REPOSITORY: mc-portfolio-backend
  DB_ECR_REPOSITORY: mc-portfolio-backend-postgres

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
        id-token: write
        contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get short SHA
      id: short_sha
      run: echo "::set-output name=sha_short::$(echo ${GITHUB_SHA} | cut -c1-7)"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::713984691710:role/github_action_role
        aws-region: ${{ env.AWS_REGION }}
        
    - name: ECR Login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Build and push postgres docker image to ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        POSTGRES_REPOSITORY: '${{ env.DB_ECR_REPOSITORY }}'
        IMAGE_TAG: ${{ steps.short_sha.outputs.sha_short }} 
      run: |
        docker build -t $REGISTRY/$POSTGRES_REPOSITORY:$IMAGE_TAG ./db
        docker push $REGISTRY/$POSTGRES_REPOSITORY:$IMAGE_TAG
        docker tag $REGISTRY/$POSTGRES_REPOSITORY:$IMAGE_TAG $REGISTRY/$POSTGRES_REPOSITORY:latest
        docker push $REGISTRY/$POSTGRES_REPOSITORY:latest
      
        
    - name: Create .env file
      run: echo "MUX_TOKEN_ID=${{ secrets.MUX_TOKEN_ID }}" >> .env && echo "MUX_TOKEN_SECRET=${{ secrets.MUX_TOKEN_SECRET }}" >> .env
  
    - name: Build and push py fastapi docker image to ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ env.API_ECR_REPOSITORY }}
        IMAGE_TAG: ${{ steps.short_sha.outputs.sha_short }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
        docker push $REGISTRY/$REPOSITORY:latest
  